AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  GlueDatabaseName:
    Type: String
    Description: 'The name of the Glue database'
    Default: 'codecommit_event_logs'
  BufferingHintsSizeInMBs:
    Type: Number
    Default: 1
    Description: 'The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the S3 bucket'
  BufferingHintsIntervalInSeconds:
    Type: Number   
    Default: 60
    Description: 'The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the S3 bucket'

Outputs:
  GlueDatabaseName:
    Value: !Ref GlueDatabaseName
    Description: 'The name of the Glue database'
  LogBucket:
    Value: !Ref LogBucket
    Description: 'The name of the S3 bucket holding the log files'
  DeliveryStreamLogGroup:
    Value: !Ref DeliveryStreamLogGroup
    Description: 'The name of the CloudWatch log group that contains logs for Kinesis Data Firehose errors'
  DeliveryStreamLogStream:
    Value: !Ref DeliveryStreamLogStream
    Description: 'The name of the CloudWatch log stream that contains logs for Kinesis Data Firehose errors'
  RepositoryStateChangeTablename:
    Value: 'repository_state_change'
    Description: 'The name of the Glue table for repository state change event logs'
  PullRequestStateChangeTablename:
    Value: 'pull_request_state_change'
    Description: 'The name of the Glue table for pull request state change event logs'
  ApprovalRuleTemplateChangeTablename:
    Value: 'approval_rule_template_change'
    Description: 'The name of the Glue table for approval rule template change event logs'
  CommentOnCommitTablename:
    Value: 'comment_on_commit'
    Description: 'The name of the Glue table for commit comment event logs'
  CommentOnPullRequestTablename:
    Value: 'comment_on_pull_request'
    Description: 'The name of the Glue table for pull request comment event logs'

Resources:

  ### LOGS ###


  # S3 bucket containing log files
  LogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      NotificationConfiguration:
        LambdaConfigurations:
          - Function:
              Fn::GetAtt:
              - CreatePartitionFunction
              - Arn
            Filter:
              S3Key:
                  Rules:
                  - Name: suffix
                    Value: .gz
                  - Name: prefix
                    Value: repository_state_change
            Event: s3:ObjectCreated:*
          - Function:
              Fn::GetAtt:
              - CreatePartitionFunction
              - Arn
            Filter:
              S3Key:
                  Rules:
                  - Name: suffix
                    Value: .gz
                  - Name: prefix
                    Value: comment_on_commit
            Event: s3:ObjectCreated:*
          - Function:
              Fn::GetAtt:
              - CreatePartitionFunction
              - Arn
            Filter:
              S3Key:
                  Rules:
                  - Name: suffix
                    Value: .gz
                  - Name: prefix
                    Value: comment_on_pull_request
            Event: s3:ObjectCreated:*
          - Function:
              Fn::GetAtt:
              - CreatePartitionFunction
              - Arn
            Filter:
              S3Key:
                  Rules:
                  - Name: suffix
                    Value: .gz
                  - Name: prefix
                    Value: pull_request_state_change
            Event: s3:ObjectCreated:*
          - Function:
              Fn::GetAtt:
              - CreatePartitionFunction
              - Arn
            Filter:
              S3Key:
                  Rules:
                  - Name: suffix
                    Value: .gz
                  - Name: prefix
                    Value: approval_rule_template_change
            Event: s3:ObjectCreated:*


  # Glue database for codecommit event logs
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref GlueDatabaseName


  # Glue table for repository state change events
  RepositoryStateChangeTable:
    Type: AWS::Glue::Table
    Properties: 
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput: 
        Name: repository_state_change
        PartitionKeys:
          - Type: date
            Name: date
          - Type: string
            Name: hour
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub 's3://${LogBucket}/repository_state_change/'
            StoredAsSubDirectories: false
            SerdeInfo:
                SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
                Parameters:
                    serialization.format: '1'
            Columns:
                - 
                  Name: timestamp 
                  Type: string
                - 
                  Name: eventVersion
                  Type: string
                - 
                  Name: repositoryArn
                  Type: string
                - 
                  Name: event
                  Type: string
                - 
                  Name: baseCommitId
                  Type: string
                - 
                  Name: callerUserArn
                  Type: string
                - 
                  Name: commitId
                  Type: string
                - 
                  Name: conflictDetailLevel
                  Type: string
                - 
                  Name: conflictResolutionStrategy
                  Type: string
                - 
                  Name: destinationCommitId
                  Type: string
                - 
                  Name: mergeOption
                  Type: string
                - 
                  Name: oldCommitId
                  Type: string
                - 
                  Name: referenceFullName
                  Type: string
                - 
                  Name: referenceName
                  Type: string
                - 
                  Name: referenceType
                  Type: string
                - 
                  Name: repositoryId
                  Type: string
                - 
                  Name: repositoryName
                  Type: string
                - 
                  Name: sourceCommitId
                  Type: string
                - 
                  Name: conflictDetailsLevel
                  Type: string


  # Glue table for pull request state change event logs
  PullRequestStateChangeTable:
    Type: AWS::Glue::Table
    Properties: 
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput: 
        Name: pull_request_state_change
        PartitionKeys:
          - Type: date
            Name: date
          - Type: string
            Name: hour
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub 's3://${LogBucket}/pull_request_state_change/'
            StoredAsSubDirectories: false
            SerdeInfo:
                SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
                Parameters:
                    serialization.format: '1'
            Columns:
                - 
                  Name: timestamp 
                  Type: string
                - 
                  Name: eventVersion
                  Type: string
                - 
                  Name: repositoryArn
                  Type: string
                - 
                  Name: event
                  Type: string
                - 
                  Name: approvalStatus
                  Type: string
                - 
                  Name: author
                  Type: string
                - 
                  Name: callerUserArn
                  Type: string
                - 
                  Name: creationDate
                  Type: string
                - 
                  Name: description
                  Type: string
                - 
                  Name: destinationCommit
                  Type: string
                - 
                  Name: destinationReference
                  Type: string
                - 
                  Name: isMerged
                  Type: string
                - 
                  Name: lastModifiedDate
                  Type: string
                - 
                  Name: mergeOption
                  Type: string
                - 
                  Name: notificationBody
                  Type: string
                - 
                  Name: overrideStatus
                  Type: string
                - 
                  Name: pullRequestId
                  Type: string
                - 
                  Name: pullRequestStatus
                  Type: string
                - 
                  Name: repositoryNames
                  Type: array<string>
                - 
                  Name: revisionId
                  Type: string
                - 
                  Name: sourceCommit
                  Type: string
                - 
                  Name: sourceReference
                  Type: string
                - 
                  Name: title
                  Type: string


  #  Glue table for approval rule template change event logs
  ApprovalRuleTemplateChangeTable:
    Type: AWS::Glue::Table
    Properties: 
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput: 
        Name: approval_rule_template_change
        PartitionKeys:
          - Type: date
            Name: date
          - Type: string
            Name: hour
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub 's3://${LogBucket}/approval_rule_template_change/'
            StoredAsSubDirectories: false
            SerdeInfo:
                SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
                Parameters:
                    serialization.format: '1'
            Columns:
                - 
                  Name: timestamp 
                  Type: string
                - 
                  Name: eventVersion
                  Type: string
                - 
                  Name: event
                  Type: string
                - 
                  Name: repositories
                  Type: map<string,string>
                - 
                  Name: approvalRuleTemplateContentSha256
                  Type: string
                - 
                  Name: approvalRuleTemplateId
                  Type: string
                - 
                  Name: approvalRuleTemplateName
                  Type: string
                - 
                  Name: callerUserArn
                  Type: string
                - 
                  Name: creationDate
                  Type: string
                - 
                  Name: lastModifiedDate
                  Type: string
                - 
                  Name: notificationBody
                  Type: string


  #  Glue table for commit comment event logs
  CommentOnCommitTable:
    Type: AWS::Glue::Table
    Properties: 
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput: 
        Name: comment_on_commit
        PartitionKeys:
          - Type: date
            Name: date
          - Type: string
            Name: hour
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub 's3://${LogBucket}/comment_on_commit/'
            StoredAsSubDirectories: false
            SerdeInfo:
                SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
                Parameters:
                    serialization.format: '1'
            Columns:
                - 
                  Name: timestamp 
                  Type: string
                - 
                  Name: eventVersion
                  Type: string
                - 
                  Name: event
                  Type: string
                - 
                  Name: repositoryArn
                  Type: string
                - 
                  Name: beforeCommitId
                  Type: string
                - 
                  Name: repositoryId
                  Type: string
                - 
                  Name: inReplyTo
                  Type: string
                - 
                  Name: notificationBody
                  Type: string
                - 
                  Name: commentId
                  Type: string
                - 
                  Name: afterCommitId
                  Type: string
                - 
                  Name: repositoryName
                  Type: string
                - 
                  Name: callerUserArn
                  Type: string


  #  Glue table for pull request comment event logs
  CommentOnPullRequestTable:
    Type: AWS::Glue::Table
    Properties: 
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabase
      TableInput: 
        Name: comment_on_pull_request
        PartitionKeys:
          - Type: date
            Name: date
          - Type: string
            Name: hour
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub 's3://${LogBucket}/comment_on_pull_request/'
            StoredAsSubDirectories: false
            SerdeInfo:
                SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
                Parameters:
                    serialization.format: '1'
            Columns:
                - 
                  Name: timestamp 
                  Type: string
                - 
                  Name: eventVersion
                  Type: string
                - 
                  Name: event
                  Type: string
                - 
                  Name: beforeCommitId
                  Type: string
                - 
                  Name: repositoryId
                  Type: string
                - 
                  Name: inReplyTo
                  Type: string
                - 
                  Name: notificationBody
                  Type: string
                - 
                  Name: commentId
                  Type: string
                - 
                  Name: afterCommitId
                  Type: string
                - 
                  Name: repositoryName
                  Type: string
                - 
                  Name: callerUserArn
                  Type: string
                - 
                  Name: pullRequestId
                  Type: string


  # Lambda function that attempts to create a Glue partition when a log file is put into the S3 bucket
  CreatePartitionFunction:
      Type: AWS::Serverless::Function
      Properties:
          Handler: index.handler
          Runtime: python3.8
          CodeUri: lambdas/create-partition
          Timeout : 20
          Environment:
            Variables:
                DATABASE_NAME: !Ref GlueDatabase
          Policies:
            -
              Statement:
                - Effect: Allow
                  Action:
                    - 'glue:BatchCreatePartition'
                    - 'glue:CreatePartition'
                  Resource: "*"

                        
  # Lambda function permission to allow S3 to invoke 'CreatePartitionFunction'
  CreatePartitionFunctionDumpEventPermission:
      Type: AWS::Lambda::Permission
      Properties:
          Action: lambda:InvokeFunction
          SourceAccount:
              Ref: AWS::AccountId
          FunctionName:
              Ref: CreatePartitionFunction
          Principal: s3.amazonaws.com

  
  ### LOG DELIVERY ###

  # Firehose delivery stream that aggregates repository state change events into log files 
  RepositoryStateChangeDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryStreamRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${LogBucket}'
        Prefix: 'repository_state_change/'
        ErrorOutputPrefix: 'error/repository_state_change/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
            SizeInMBs: !Ref BufferingHintsSizeInMBs
            IntervalInSeconds: !Ref BufferingHintsIntervalInSeconds
        CompressionFormat: GZIP
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref DeliveryStreamLogGroup
          LogStreamName: !Ref DeliveryStreamLogStream
        ProcessingConfiguration:
          Enabled: true
          Processors:
            -
                Type: Lambda
                Parameters:
                  - 
                    ParameterName: LambdaArn
                    ParameterValue: !GetAtt FirehoseTransformFunction.Arn

  # Firehose delivery stream that aggregates pull request state change events into log files 
  PullRequestStateChangeDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryStreamRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${LogBucket}'
        Prefix: 'pull_request_state_change/'
        ErrorOutputPrefix: 'error/pull_request_state_change/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
            SizeInMBs: !Ref BufferingHintsSizeInMBs
            IntervalInSeconds: !Ref BufferingHintsIntervalInSeconds
        CompressionFormat: GZIP
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref DeliveryStreamLogGroup
          LogStreamName: !Ref DeliveryStreamLogStream
        ProcessingConfiguration:
          Enabled: true
          Processors:
            -
                Type: Lambda
                Parameters:
                  - 
                    ParameterName: LambdaArn
                    ParameterValue: !GetAtt FirehoseTransformFunction.Arn

  # Firehose delivery stream that aggregates approval rule template change events into log files 
  ApprovalRuleTemplateChangeDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryStreamRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${LogBucket}'
        Prefix: 'approval_rule_template_change/'
        ErrorOutputPrefix: 'error/approval_rule_template_change/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
            SizeInMBs: !Ref BufferingHintsSizeInMBs
            IntervalInSeconds: !Ref BufferingHintsIntervalInSeconds
        CompressionFormat: GZIP
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref DeliveryStreamLogGroup
          LogStreamName: !Ref DeliveryStreamLogStream
        ProcessingConfiguration:
          Enabled: true
          Processors:
            -
                Type: Lambda
                Parameters:
                  - 
                    ParameterName: LambdaArn
                    ParameterValue: !GetAtt FirehoseTransformFunction.Arn

  # Firehose delivery stream that aggregates commit comment events into log files 
  CommentOnCommitDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryStreamRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${LogBucket}'
        Prefix: 'comment_on_commit/'
        ErrorOutputPrefix: 'error/comment_on_commit/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
            SizeInMBs: !Ref BufferingHintsSizeInMBs
            IntervalInSeconds: !Ref BufferingHintsIntervalInSeconds
        CompressionFormat: GZIP
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref DeliveryStreamLogGroup
          LogStreamName: !Ref DeliveryStreamLogStream
        ProcessingConfiguration:
          Enabled: true
          Processors:
            -
                Type: Lambda
                Parameters:
                  - 
                    ParameterName: LambdaArn
                    ParameterValue: !GetAtt FirehoseTransformFunction.Arn

  # Firehose delivery stream that aggregates pull request comment events into log files 
  CommentOnPullRequestDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties: 
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt DeliveryStreamRole.Arn
        BucketARN: !Sub 'arn:aws:s3:::${LogBucket}'
        Prefix: 'comment_on_pull_request/'
        ErrorOutputPrefix: 'error/comment_on_pull_request/!{firehose:error-output-type}/year=!{timestamp:YYYY}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/'
        BufferingHints:
            SizeInMBs: !Ref BufferingHintsSizeInMBs
            IntervalInSeconds: !Ref BufferingHintsIntervalInSeconds
        CompressionFormat: GZIP
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref DeliveryStreamLogGroup
          LogStreamName: !Ref DeliveryStreamLogStream
        ProcessingConfiguration:
          Enabled: true
          Processors:
            -
                Type: Lambda
                Parameters:
                  - 
                    ParameterName: LambdaArn
                    ParameterValue: !GetAtt FirehoseTransformFunction.Arn

                      
  # Lambda function that transforms CodeCommit events to fit the schema of the Glue tables
  FirehoseTransformFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python3.8
      CodeUri: lambdas/firehose-transform
      Timeout: 60

  # A CloudWatch log group to hold error logs for the Firehose delivery streams
  DeliveryStreamLogGroup:
    Type: 'AWS::Logs::LogGroup'

  # A CloudWatch log stream to hold error logs for the Firehose delivery streams
  DeliveryStreamLogStream:
    Type: 'AWS::Logs::LogStream'
    Properties:
      LogGroupName: !Ref DeliveryStreamLogGroup

  # An IAM role giving the Firehose delivery streams access to the S3 log bucket, the CloudWatch log group/stream, and the transformation Lambda function
  DeliveryStreamRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Sid: ''
                  Effect: Allow
                  Principal:
                    Service: firehose.amazonaws.com
                  Action: 'sts:AssumeRole'
                  Condition:
                    StringEquals:
                        'sts:ExternalId': !Ref 'AWS::AccountId'
        Path: "/"
        Policies:
            - PolicyName: firehose_delivery_policy
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                        - 's3:AbortMultipartUpload'
                        - 's3:GetBucketLocation'
                        - 's3:GetObject'
                        - 's3:ListBucket'
                        - 's3:ListBucketMultipartUploads'
                        - 's3:PutObject'
                      Resource:
                            - !Join 
                                - ''
                                - - 'arn:aws:s3:::'
                                  - !Ref LogBucket
                            - !Join 
                                - ''
                                - - 'arn:aws:s3:::'
                                  - !Ref LogBucket
                                  - '/*'
                    - Effect: Allow
                      Action:
                        - 'logs:PutLogEvents'
                      Resource:
                        - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${DeliveryStreamLogGroup}:log-stream:${DeliveryStreamLogStream}"
                    - Effect: Allow
                      Action:
                            - 'lambda:InvokeFunction'
                      Resource:
                            - !GetAtt FirehoseTransformFunction.Arn


  ### EVENTS ###

  # Event rule capturing repository state changes
  RepositoryStateChangeEventRule: 
      Type: AWS::Events::Rule
      Properties: 
        EventPattern: 
          source:
            - 'aws.codecommit'
          detail-type:
            - 'CodeCommit Repository State Change'
        State: "ENABLED"
        Targets:
          - Arn: !GetAtt RepositoryStateChangeDeliveryStream.Arn
            Id: repository_state_change
            RoleArn: !GetAtt EventsRole.Arn

  # Event rule capturing pull request state changes
  PullRequestStateChangeEventRule: 
      Type: AWS::Events::Rule
      Properties: 
        EventPattern: 
          source:
            - 'aws.codecommit'
          detail-type:
            - 'CodeCommit Pull Request State Change'
        State: "ENABLED"
        Targets:
          - Arn: !GetAtt PullRequestStateChangeDeliveryStream.Arn
            Id: pull_request_state_change
            RoleArn: !GetAtt EventsRole.Arn


  # Event rule capturing approval rule template changes
  ApprovalRuleTemplateChangeEventRule: 
      Type: AWS::Events::Rule
      Properties: 
        EventPattern: 
          source:
            - 'aws.codecommit'
          detail-type:
            - 'CodeCommit Approval Rule Template Change'
        State: "ENABLED"
        Targets:
          - Arn: !GetAtt ApprovalRuleTemplateChangeDeliveryStream.Arn
            Id: approval_rule_template_change
            RoleArn: !GetAtt EventsRole.Arn

  # Event rule capturing commit comments
  CommentOnCommitEventRule: 
      Type: AWS::Events::Rule
      Properties: 
        EventPattern: 
          source:
            - 'aws.codecommit'
          detail-type:
            - 'CodeCommit Comment on Commit'
        State: "ENABLED"
        Targets:
          - Arn: !GetAtt CommentOnCommitDeliveryStream.Arn
            Id: comment_on_commit
            RoleArn: !GetAtt EventsRole.Arn

  # Event rule capturing pull request comments
  CommentOnPullRequestEventRule: 
      Type: AWS::Events::Rule
      Properties: 
        EventPattern: 
          source:
            - 'aws.codecommit'
          detail-type:
            - 'CodeCommit Comment on Pull Request'
        State: "ENABLED"
        Targets:
          - Arn: !GetAtt CommentOnPullRequestDeliveryStream.Arn
            Id: comment_on_pull_request
            RoleArn: !GetAtt EventsRole.Arn

  # IAM role giving the event rules permission to put records in the Firehose delivery streams
  EventsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
              - Sid: ''
                Effect: Allow
                Principal:
                  Service: events.amazonaws.com
                Action: 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'firehose:PutRecord'
                  - 'firehose:PutRecordBatch'
                Resource: 
                  - !GetAtt RepositoryStateChangeDeliveryStream.Arn
                  - !GetAtt PullRequestStateChangeDeliveryStream.Arn
                  - !GetAtt ApprovalRuleTemplateChangeDeliveryStream.Arn
                  - !GetAtt CommentOnCommitDeliveryStream.Arn
                  - !GetAtt CommentOnPullRequestDeliveryStream.Arn